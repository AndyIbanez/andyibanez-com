<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>networking on Andy Ibanez</title>
    <link>https://www.andyibanez.com/tags/networking/</link>
    <description>Recent content in networking on Andy Ibanez</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Feb 2021 07:00:00 -0400</lastBuildDate>
    
	<atom:link href="https://www.andyibanez.com/tags/networking/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Intercepting iOS Network Request Calls with Proxyman</title>
      <link>https://www.andyibanez.com/posts/intercepting-ios-network-request-calls-proxyman/</link>
      <pubDate>Wed, 10 Feb 2021 07:00:00 -0400</pubDate>
      
      <guid>https://www.andyibanez.com/posts/intercepting-ios-network-request-calls-proxyman/</guid>
      <description>Intercepting iOS Network Request Calls with Proxyman
Working with network APIs can be tricky, especially when debugging. You oftentimes have to ask yourself if your app is sending and receiving the expected information. You also often worry about whether the web service returns whatever it promises it will return. Working with APIs is both easy and tricky due to all the implications behind the scenes. What happens if the service goes down and sends unexpected responses?</description>
    </item>
    
    <item>
      <title>Intercepting Network Traffic with mitmproxy</title>
      <link>https://www.andyibanez.com/posts/intercepting-network-mitmproxy/</link>
      <pubDate>Wed, 20 Nov 2019 07:00:00 -0400</pubDate>
      
      <guid>https://www.andyibanez.com/posts/intercepting-network-mitmproxy/</guid>
      <description>If you have been programming mobile apps for a while, you must have used a web based API - JSON based or otherwise - and you have had to deal with bugs related to your requests and responses to a web service. You have likely asked yourself why some parsing code is not working as expected, or why a request seems to have an invalid format. Intercepting your own network calls with a proxy can help you find the answer to these questions.</description>
    </item>
    
    <item>
      <title>Building URLs With NSURLComponents</title>
      <link>https://www.andyibanez.com/posts/building-urls-with-nsurlcomponents/</link>
      <pubDate>Wed, 04 Sep 2019 07:00:00 -0400</pubDate>
      
      <guid>https://www.andyibanez.com/posts/building-urls-with-nsurlcomponents/</guid>
      <description>If you have been programming for Apple platforms for a while, chances are you have seen (or maybe even wrote yourself) a line of code that looks like this:
let url = URL(string: &amp;#34;https://www.google.com/search?hl=en&amp;amp;q=pullip&amp;#34;)! Whether you wrote it yourself or someone else did it, one thing is clear: This is not a safe way to build URLs. Can you know, for sure, that your URL is actually valid? Intuitively, all of us can see a URL and see if it&amp;rsquo;s valid, but there is a whole lot of governing in the URL format that at some point we may find funny URLs that look valid and aren&amp;rsquo;t, or the other way around; they look invalid, but aren&amp;rsquo;t.</description>
    </item>
    
  </channel>
</rss>