<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nsformatter on Andy Ibanez</title>
    <link>https://www.andyibanez.com/tags/nsformatter/</link>
    <description>Recent content in nsformatter on Andy Ibanez</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 21 Oct 2020 07:00:00 -0400</lastBuildDate>
    
	<atom:link href="https://www.andyibanez.com/tags/nsformatter/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A More Practical Custom Formatter </title>
      <link>https://www.andyibanez.com/posts/a-more-practical-custom-formatter/</link>
      <pubDate>Wed, 21 Oct 2020 07:00:00 -0400</pubDate>
      
      <guid>https://www.andyibanez.com/posts/a-more-practical-custom-formatter/</guid>
      <description>I had announced that I wouldn&amp;rsquo;t be able to write an article this week due to it being Elections Day in my country. that said I just can&amp;rsquo;t leave you guys without article, so this is a short one.
We will write another NSFormatter subclass. It will allow us to compose E-mails easily. This should also help show that formatters can format string into anything else really.
In short, we will be able to &amp;ldquo;compose&amp;rdquo; emails using raw strings, like this:</description>
    </item>
    
    <item>
      <title>Writing Custom NSFormatters in Swift</title>
      <link>https://www.andyibanez.com/posts/writing-custom-nsformatters-swift/</link>
      <pubDate>Wed, 14 Oct 2020 07:00:00 -0400</pubDate>
      
      <guid>https://www.andyibanez.com/posts/writing-custom-nsformatters-swift/</guid>
      <description>Last year we explored some NSFormatters and how to use them. We also explored some formatters introduced in iOS 13. Finally, a few weeks ago we learned about yet more formatters, and how to better use the ones we already had. In short, we have explored how powerful NSFormatter is. One thing we haven&amp;rsquo;t done yet though, is to write our own custom NSFormatter subclass.
NSFormatter NSFormatter is an abstract class.</description>
    </item>
    
    <item>
      <title>Formatting Notes and Gotchas</title>
      <link>https://www.andyibanez.com/posts/formatting-notes-and-gotchas/</link>
      <pubDate>Wed, 30 Sep 2020 07:00:00 -0400</pubDate>
      
      <guid>https://www.andyibanez.com/posts/formatting-notes-and-gotchas/</guid>
      <description>A year ago, we talked about using NSFormatter for formatting data in a human readable format. WWDC2020 brings some updates and changes to the NSFormatter APIs that we need to be aware of. This article will complement the NSFormatter article from last year with best practices and things to look out for.
Improvements for Combinations of Languages and Regions. NSFormatter always does its best to format the data according to the user&amp;rsquo;s language and region where relevant.</description>
    </item>
    
    <item>
      <title>Formatting Relative Dates With RelativeDateTimeFormatter</title>
      <link>https://www.andyibanez.com/posts/formatting-relative-dates-relativedatetimeformatter/</link>
      <pubDate>Wed, 11 Dec 2019 07:00:00 -0400</pubDate>
      
      <guid>https://www.andyibanez.com/posts/formatting-relative-dates-relativedatetimeformatter/</guid>
      <description>Formatting Relative Dates With RelativeDateTimeFormatter
A few weeks ago we talked about formatting content with NSFormatter, an abstract class from which multiple formatting classes inherit from to allow you to format different kinds of data in a human-readable form. NSFormatter is not only a class you can inherit from yourself, but as iOS evolves, more formatters will be added to its family. This week, we will explore a new member of this family introduced in iOS 13: RelativeDateTimeFormatter.</description>
    </item>
    
    <item>
      <title>Formatting Content with NSFormatter</title>
      <link>https://www.andyibanez.com/posts/nsformatter/</link>
      <pubDate>Wed, 25 Sep 2019 07:00:00 -0400</pubDate>
      
      <guid>https://www.andyibanez.com/posts/nsformatter/</guid>
      <description>Very often, we need to deal with data in a &amp;ldquo;raw&amp;rdquo; format that, if displayed directly to the user, it makes little sense to them. This kind of data includes a date timestamp, the number of bytes in a big file, or numbers with no rounding a bunch of decimals. There is a lot of data like this, and we need to be able to format it and show it to the user.</description>
    </item>
    
  </channel>
</rss>