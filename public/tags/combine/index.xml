<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>combine on Andy Ibanez</title>
    <link>https://www.andyibanez.com/tags/combine/</link>
    <description>Recent content in combine on Andy Ibanez</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 12 Aug 2020 07:00:00 -0400</lastBuildDate>
    
	<atom:link href="https://www.andyibanez.com/tags/combine/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A File Download Queue in Combine for Swift</title>
      <link>https://www.andyibanez.com/posts/file-download-queue-combine/</link>
      <pubDate>Wed, 12 Aug 2020 07:00:00 -0400</pubDate>
      
      <guid>https://www.andyibanez.com/posts/file-download-queue-combine/</guid>
      <description>Combine allows us to create pipelines for a lot of tasks. Thanks to the fact it can do work concurrently without leveraging callbacks, it is very easy to build things that would otherwise be very complex.
In this short article, we will build a file download queue that downloads images sequentially. You can use this as the base for more complex queues.
The queue will download an array of images sequentially.</description>
    </item>
    
    <item>
      <title>Wrapping Asynchronous APIs into Combine Futures</title>
      <link>https://www.andyibanez.com/posts/wrapping-asynchronous-apis-into-combine-futures/</link>
      <pubDate>Wed, 22 Jul 2020 07:00:00 -0400</pubDate>
      
      <guid>https://www.andyibanez.com/posts/wrapping-asynchronous-apis-into-combine-futures/</guid>
      <description>Two of the concepts used a lot in Reactive Programming are the Future and Promises. Whether you have been using Combine for a while or are new to Reactive Programming, chances are you have seen these two words. These terms date to years ago. And I would be lying if I told you I knew what that they were for until I started learning Combine. The first time I heard about Futures and Promises was back in my NodeJS job half a decade ago, and I didn&amp;rsquo;t understand these concepts back then.</description>
    </item>
    
  </channel>
</rss>