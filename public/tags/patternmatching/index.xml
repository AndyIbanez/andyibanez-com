<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>patternmatching on Andy Ibanez</title>
    <link>https://www.andyibanez.com/tags/patternmatching/</link>
    <description>Recent content in patternmatching on Andy Ibanez</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 30 Oct 2019 07:00:00 -0400</lastBuildDate>
    
	<atom:link href="https://www.andyibanez.com/tags/patternmatching/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction to Patterns and Pattern Matching in Swift.</title>
      <link>https://www.andyibanez.com/posts/pattern-matching/</link>
      <pubDate>Wed, 30 Oct 2019 07:00:00 -0400</pubDate>
      
      <guid>https://www.andyibanez.com/posts/pattern-matching/</guid>
      <description>Swift is a beautiful language, but it hides some powerful features from developers who come from more &amp;ldquo;old-style&amp;rdquo; programming languages such as C++ and Java. One such feature is Pattern Matching, and it allows you to write some cleaner code when dealing with some operations.
For example, consider casting. Casting is a feature in the vast majority of statically-typed languages. Casting is considered to be an ugly operation by some, because when you need to cast, it&amp;rsquo;s usually because the language has a flaw that prevents it from telling you about the right data type underneath.</description>
    </item>
    
  </channel>
</rss>