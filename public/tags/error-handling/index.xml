<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>error handling on Andy Ibanez</title>
    <link>https://www.andyibanez.com/tags/error-handling/</link>
    <description>Recent content in error handling on Andy Ibanez</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Jun 2020 22:00:00 -0400</lastBuildDate>
    
	<atom:link href="https://www.andyibanez.com/tags/error-handling/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Error Protocol Specializations in Swift</title>
      <link>https://www.andyibanez.com/posts/error-protocol-specializations-swift/</link>
      <pubDate>Thu, 18 Jun 2020 22:00:00 -0400</pubDate>
      
      <guid>https://www.andyibanez.com/posts/error-protocol-specializations-swift/</guid>
      <description>Earlier this week I was scrolling through my Twitter feed as usual and I found this tweet that made me realize I may have been handling errors incorrectly in Swift all my life. This prompted me to research a bit more about error handling in Swift, and it turns out there&amp;rsquo;s many specialized Error protocols you can conform to, and you should probably be using them over the default Error provided by the language.</description>
    </item>
    
  </channel>
</rss>